{"version":3,"sources":["index.js"],"names":["Seasons","props","_this","Object","D_CRD_workSpace_React_seasons_seasons_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_0__","this","D_CRD_workSpace_React_seasons_seasons_node_modules_babel_runtime_helpers_esm_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_2__","D_CRD_workSpace_React_seasons_seasons_node_modules_babel_runtime_helpers_esm_getPrototypeOf__WEBPACK_IMPORTED_MODULE_3__","call","state","lat","errorMessage","_this2","window","navigator","geolocation","getCurrentPosition","position","setState","coords","latitude","err","message","console","log","concat","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","React","Component","ReactDOM","render","document","querySelector"],"mappings":"wMAGMA,cACF,SAAAA,EAAYC,GAAM,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACdE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAH,GAAAQ,KAAAH,KAAMJ,KACDQ,MAAQ,CAAEC,IAAI,KAAMC,aAAc,IAFzBT,mFAKC,IAAAU,EAAAP,KACfQ,OAAOC,UAAUC,YAAYC,mBACzB,SAACC,GAAeL,EAAKM,SAAS,CAACR,IAAIO,EAASE,OAAOC,YACnD,SAACC,GAAUT,EAAKM,SAAS,CAACP,aAAaU,EAAIC,YAE/CC,QAAQC,IAAR,OAAAC,OAAmBpB,KAAKI,MAAMC,IAA9B,WAAAe,OAA2CpB,KAAKI,MAAME,gDAItD,OAAGN,KAAKI,MAAMC,MAAQL,KAAKI,MAAME,aACtBe,EAAAC,EAAAC,cAAA,wBAAgBvB,KAAKI,MAAMC,MAElCL,KAAKI,MAAMC,KAAOL,KAAKI,MAAME,aACtBe,EAAAC,EAAAC,cAAA,mBAAWvB,KAAKI,MAAME,cAE7BN,KAAKI,MAAMC,KAAQL,KAAKI,MAAME,kBAAlC,EACWe,EAAAC,EAAAC,cAAA,8BAtBGC,IAAMC,WA0B5BC,IAASC,OACLN,EAAAC,EAAAC,cAAC5B,EAAD,MAAaiC,SAASC,cAAc","file":"static/js/main.3a0a6e97.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nclass Seasons extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = { lat:null, errorMessage: '' };\r\n    }\r\n\r\n    componentDidMount(){\r\n        window.navigator.geolocation.getCurrentPosition(\r\n            (position) => { this.setState({lat:position.coords.latitude}) },\r\n            (err) => { this.setState({errorMessage:err.message}) }\r\n        );\r\n        console.log(`lat ${this.state.lat} error ${this.state.errorMessage}`)\r\n    }\r\n\r\n    render(){\r\n        if(this.state.lat && !this.state.errorMessage){\r\n            return <div>Latitude: {this.state.lat}</div>;\r\n        }\r\n        if(!this.state.lat && this.state.errorMessage){\r\n            return <div>err: {this.state.errorMessage}</div>;\r\n        } \r\n        if(!this.state.lat && !this.state.errorMessage){\r\n            return <div>loading!</div>;\r\n        }\r\n    }\r\n}\r\nReactDOM.render(\r\n    <Seasons />, document.querySelector('#root')\r\n)"],"sourceRoot":""}